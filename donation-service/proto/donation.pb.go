// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.2
// source: proto/donation.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Donation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId        string                 `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Amount         string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Status         string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	DonationTypeId string                 `protobuf:"bytes,6,opt,name=donation_type_id,json=donationTypeId,proto3" json:"donation_type_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Donation) Reset() {
	*x = Donation{}
	mi := &file_proto_donation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Donation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Donation) ProtoMessage() {}

func (x *Donation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_donation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Donation.ProtoReflect.Descriptor instead.
func (*Donation) Descriptor() ([]byte, []int) {
	return file_proto_donation_proto_rawDescGZIP(), []int{0}
}

func (x *Donation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Donation) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Donation) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Donation) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Donation) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Donation) GetDonationTypeId() string {
	if x != nil {
		return x.DonationTypeId
	}
	return ""
}

type CreateDonationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EventId        string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Amount         string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Status         string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	DonationTypeId string                 `protobuf:"bytes,4,opt,name=donation_type_id,json=donationTypeId,proto3" json:"donation_type_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDonationRequest) Reset() {
	*x = CreateDonationRequest{}
	mi := &file_proto_donation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDonationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDonationRequest) ProtoMessage() {}

func (x *CreateDonationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_donation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDonationRequest.ProtoReflect.Descriptor instead.
func (*CreateDonationRequest) Descriptor() ([]byte, []int) {
	return file_proto_donation_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDonationRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *CreateDonationRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CreateDonationRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateDonationRequest) GetDonationTypeId() string {
	if x != nil {
		return x.DonationTypeId
	}
	return ""
}

type CreateDonationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId       string                 `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Amount        string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	DonationType  string                 `protobuf:"bytes,6,opt,name=donation_type,json=donationType,proto3" json:"donation_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDonationResponse) Reset() {
	*x = CreateDonationResponse{}
	mi := &file_proto_donation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDonationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDonationResponse) ProtoMessage() {}

func (x *CreateDonationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_donation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDonationResponse.ProtoReflect.Descriptor instead.
func (*CreateDonationResponse) Descriptor() ([]byte, []int) {
	return file_proto_donation_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDonationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateDonationResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateDonationResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *CreateDonationResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CreateDonationResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateDonationResponse) GetDonationType() string {
	if x != nil {
		return x.DonationType
	}
	return ""
}

type UpdateDonationStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDonationStatusRequest) Reset() {
	*x = UpdateDonationStatusRequest{}
	mi := &file_proto_donation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDonationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDonationStatusRequest) ProtoMessage() {}

func (x *UpdateDonationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_donation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDonationStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateDonationStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_donation_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDonationStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDonationStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateDonationStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId       string                 `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Amount        string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	DonationType  string                 `protobuf:"bytes,6,opt,name=donation_type,json=donationType,proto3" json:"donation_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDonationStatusResponse) Reset() {
	*x = UpdateDonationStatusResponse{}
	mi := &file_proto_donation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDonationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDonationStatusResponse) ProtoMessage() {}

func (x *UpdateDonationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_donation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDonationStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateDonationStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_donation_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDonationStatusResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDonationStatusResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateDonationStatusResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *UpdateDonationStatusResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *UpdateDonationStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateDonationStatusResponse) GetDonationType() string {
	if x != nil {
		return x.DonationType
	}
	return ""
}

type GetDonationsByUserIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDonationsByUserIdRequest) Reset() {
	*x = GetDonationsByUserIdRequest{}
	mi := &file_proto_donation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDonationsByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDonationsByUserIdRequest) ProtoMessage() {}

func (x *GetDonationsByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_donation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDonationsByUserIdRequest.ProtoReflect.Descriptor instead.
func (*GetDonationsByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_donation_proto_rawDescGZIP(), []int{5}
}

func (x *GetDonationsByUserIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetDonationsByUserIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Donations     []*Donation            `protobuf:"bytes,1,rep,name=donations,proto3" json:"donations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDonationsByUserIdResponse) Reset() {
	*x = GetDonationsByUserIdResponse{}
	mi := &file_proto_donation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDonationsByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDonationsByUserIdResponse) ProtoMessage() {}

func (x *GetDonationsByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_donation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDonationsByUserIdResponse.ProtoReflect.Descriptor instead.
func (*GetDonationsByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_donation_proto_rawDescGZIP(), []int{6}
}

func (x *GetDonationsByUserIdResponse) GetDonations() []*Donation {
	if x != nil {
		return x.Donations
	}
	return nil
}

type GetDonationsByEventIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDonationsByEventIdRequest) Reset() {
	*x = GetDonationsByEventIdRequest{}
	mi := &file_proto_donation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDonationsByEventIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDonationsByEventIdRequest) ProtoMessage() {}

func (x *GetDonationsByEventIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_donation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDonationsByEventIdRequest.ProtoReflect.Descriptor instead.
func (*GetDonationsByEventIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_donation_proto_rawDescGZIP(), []int{7}
}

func (x *GetDonationsByEventIdRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type GetDonationsByEventIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Donations     []*Donation            `protobuf:"bytes,1,rep,name=donations,proto3" json:"donations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDonationsByEventIdResponse) Reset() {
	*x = GetDonationsByEventIdResponse{}
	mi := &file_proto_donation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDonationsByEventIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDonationsByEventIdResponse) ProtoMessage() {}

func (x *GetDonationsByEventIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_donation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDonationsByEventIdResponse.ProtoReflect.Descriptor instead.
func (*GetDonationsByEventIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_donation_proto_rawDescGZIP(), []int{8}
}

func (x *GetDonationsByEventIdResponse) GetDonations() []*Donation {
	if x != nil {
		return x.Donations
	}
	return nil
}

var File_proto_donation_proto protoreflect.FileDescriptor

var file_proto_donation_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xa8, 0x01, 0x0a, 0x08, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x45,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x36, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x6f, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x39, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0x9e, 0x03, 0x0a, 0x0f, 0x44, 0x6f, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e,
	0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x65, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x64, 0x6f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x73, 0x61, 0x74,
	0x72, 0x79, 0x61, 0x2f, 0x67, 0x6f, 0x6f, 0x64, 0x6b, 0x61, 0x72, 0x6d, 0x61, 0x2f, 0x64, 0x6f,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_donation_proto_rawDescOnce sync.Once
	file_proto_donation_proto_rawDescData = file_proto_donation_proto_rawDesc
)

func file_proto_donation_proto_rawDescGZIP() []byte {
	file_proto_donation_proto_rawDescOnce.Do(func() {
		file_proto_donation_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_donation_proto_rawDescData)
	})
	return file_proto_donation_proto_rawDescData
}

var file_proto_donation_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_donation_proto_goTypes = []any{
	(*Donation)(nil),                      // 0: donation.Donation
	(*CreateDonationRequest)(nil),         // 1: donation.CreateDonationRequest
	(*CreateDonationResponse)(nil),        // 2: donation.CreateDonationResponse
	(*UpdateDonationStatusRequest)(nil),   // 3: donation.UpdateDonationStatusRequest
	(*UpdateDonationStatusResponse)(nil),  // 4: donation.UpdateDonationStatusResponse
	(*GetDonationsByUserIdRequest)(nil),   // 5: donation.GetDonationsByUserIdRequest
	(*GetDonationsByUserIdResponse)(nil),  // 6: donation.GetDonationsByUserIdResponse
	(*GetDonationsByEventIdRequest)(nil),  // 7: donation.GetDonationsByEventIdRequest
	(*GetDonationsByEventIdResponse)(nil), // 8: donation.GetDonationsByEventIdResponse
}
var file_proto_donation_proto_depIdxs = []int32{
	0, // 0: donation.GetDonationsByUserIdResponse.donations:type_name -> donation.Donation
	0, // 1: donation.GetDonationsByEventIdResponse.donations:type_name -> donation.Donation
	1, // 2: donation.DonationService.CreateDonation:input_type -> donation.CreateDonationRequest
	3, // 3: donation.DonationService.UpdateDonationStatus:input_type -> donation.UpdateDonationStatusRequest
	5, // 4: donation.DonationService.GetDonationsByUserId:input_type -> donation.GetDonationsByUserIdRequest
	7, // 5: donation.DonationService.GetDonationsByEventId:input_type -> donation.GetDonationsByEventIdRequest
	2, // 6: donation.DonationService.CreateDonation:output_type -> donation.CreateDonationResponse
	4, // 7: donation.DonationService.UpdateDonationStatus:output_type -> donation.UpdateDonationStatusResponse
	6, // 8: donation.DonationService.GetDonationsByUserId:output_type -> donation.GetDonationsByUserIdResponse
	8, // 9: donation.DonationService.GetDonationsByEventId:output_type -> donation.GetDonationsByEventIdResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_donation_proto_init() }
func file_proto_donation_proto_init() {
	if File_proto_donation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_donation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_donation_proto_goTypes,
		DependencyIndexes: file_proto_donation_proto_depIdxs,
		MessageInfos:      file_proto_donation_proto_msgTypes,
	}.Build()
	File_proto_donation_proto = out.File
	file_proto_donation_proto_rawDesc = nil
	file_proto_donation_proto_goTypes = nil
	file_proto_donation_proto_depIdxs = nil
}
